name: test-pipeline

jobs:
- job: PytestOnWindows
  pool:
    vmImage: 'windows-latest'
  
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.13'
      addToPath: true
      # Added a never expire public repo read only Github token in ENV since the new python version is downloaded from GitHub
      githubToken: $(GITHUB_TOKEN)
    displayName: 'Use Python 3.13'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      cd mssql_python\pybind
      mkdir build
      cd build  
      cmake -DPython3_EXECUTABLE="python3" -DCMAKE_BUILD_TYPE=Debug ..
      cmake --build . --config Debug
      copy Debug\ddbc_bindings.pyd ..\..\ddbc_bindings.pyd
    displayName: 'Build .pyd file'

  - script: |
      python -m pytest -v --junitxml=test-results.xml --cov=. --cov-report=xml --capture=tee-sys --cache-clear
    displayName: 'Run tests with coverage'
    env:
      DB_CONNECTION_STRING: $(DB_CONNECTION_STRING)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'mssql_python/ddbc_bindings.pyd'
      ArtifactName: 'ddbc_bindings'
      publishLocation: 'Container'
    displayName: 'Publish pyd file as artifact'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Publish test results'

  - task: PublishCodeCoverageResults@1
    # Have to resort to using PublishCodeCoverageResults@1 because PublishCodeCoverageResults@2 does not use ReportGenerator 
    # https://stackoverflow.com/questions/78200629/azure-publishcodecoverageresults2-issue-with-detailed-report-for-coverage
    # https://devblogs.microsoft.com/devops/new-pccr-task/?commentid=4300#comment-4300
    # There will be warnings in the logs about this, but the coverage report will still be published, and the pipeline will not fail
    # @gaurav to keep an eye on this in case the v1 task is deprecated.
    # Alternatively, we can use the ReportGenerator tool to generate the coverage report and then publish it using the v2 task.
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    displayName: 'Publish code coverage results'
